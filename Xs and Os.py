place = [[' '] * 3 for i in range(3)]                 # Создаем поле 3 на 3


def greeting():

    print('''Приветствую Вас в игре "Крестики нолики".
Чтобы сделать ход сначала нужно ввести номер столбца,
затем пробел, а после - номер строки. Для подтверждения
хода нужно нажать "ENTER".
Победит тот игрок, кто первым выстроит в ряд крестики
или нолики, в зависимости от того, чем он играет.
ДА ПОБЕДИТ СИЛЬНЕЙШИЙ!!!''')


def field():                                           # Показывает игровое поле
    print('    | 0 | 1 | 2 |')                         # Шапка
    print(' ----------------')                         # Разделитель
    for i in range(3):                                 # Создаем 3 строки
        print('  ' + str(i) + f' | {place[i][0]} | {place[i][1]} | {place[i][2]} |')
        print(' ----------------')                     # с щелями и с разделителями


def your_move():                                       # Прием хода
    while True:                                        # Постоянный запрос
        move = input('Ваш ход:\n').split()
        if len(move) != 2:                             # Проверки на адекватность
            print('Должны быть 2 цифры от 0 до 2')     # введения координат
            continue
        if not move[0].isdigit() or not move[1].isdigit():
            print('Должны быть именно цифры')
            continue
        y, x = map(int, move)
        if 0 <= x <= 2 and 0 <= y <= 2:                # Если координаты адекватны,
            if place[x][y] == ' ':                     # то функция их передает
                return x, y
            else:
                print('Эта клетка занята.')
                continue
        else:
            print('Такого места нет.')
            continue


def is_winner():                                      # Проверяем выигрышные координаты
    win_comb = [((0, 0), (0, 1), (0, 2)),             # Для удобства чтения располагаем
                ((1, 0), (1, 1), (1, 2)),             # комбинации одна под другой.
                ((2, 0), (2, 1), (2, 2)),
                ((0, 0), (1, 0), (2, 0)),
                ((0, 1), (1, 1), (2, 1)),
                ((0, 2), (1, 2), (2, 2)),
                ((0, 0), (1, 1), (2, 2)),
                ((2, 0), (1, 1), (0, 2))]
    for comb in win_comb:
        a = comb[0]               # По очереди присваиваем координаты из первого столбца
        b = comb[1]               # ----------------///-------------- из второго столбца
        c = comb[2]               # ----------------///-------------- из третьего столбца
        if place[a[0]][a[1]] == place[b[0]][b[1]] == place[c[0]][c[1]] != ' ':
            # Если на всех выигрышных координатах содержится только Х или О
            print(f'Побеждает {place[a[0]][a[1]]}!')   # объявляем его победителем
            return True


def gameplay():                                       # Сама игра
    turn = 0                                          # Очередность
    greeting()                                        # Приветствие
    field()                                           # Пустое поле
    while True:                                       # Постоянный запрос на ход
        if turn % 2 == 0:                             # игрока (функция your_move())
            print('Ходит крестик')
        else:
            print('Ходит нолик')
        x, y = your_move()
        if turn % 2 == 0:                             # В зависимости от очереди заполняем
            place[x][y] = 'X'                         # клетку крестиком или ноликом
        else:
            place[x][y] = 'O'
        field()                                       # отпечатываем измененное поле
        if is_winner():                               # запускаем функцию is_winner()
            break                                     # Игра окончена, есть победитель
        turn += 1                                     # Следующая очередь
        if turn == 9:                                 # Все клетки уже заполнены
            print('Ничья')
            break                                     # Игра окончена вничью


gameplay()
